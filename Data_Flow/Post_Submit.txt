PostForm Submit Data Flow

1.  PostForm에서 text를 입력후 submit를 누르면 dispatch(addPost(text))
    가 실행된다.
2.  Reducer에 addPost에서 데이터를 넘겨주면 
    
    Saga에서 function* watchAddPost() {
    yield takeLatest(ADD_POST_REQUEST, addPost);
    }

    Saga에서의 addPost가 실행된다.

    function* addPost(action) {
      try {
        // const result = yield call(addPostAPI,action.payload)
        yield delay(1000);
        yield put({
          type: ADD_POST_SUCCESS,
          data: action.data,
        });
      } catch (err) {
        yield put({
          type: ADD_POST_FAILURE,
          data: err.response.data,
        });
      }
    }

    서버의 응답에 따라 SUCCESS or FAILURE가 실행된다. 

3.  Saga의 post에서 data는 action.data에서 data로 다시 들어가게된다.

4.  Saga에서 ADD_POST_SUCCESS를 실행하면 Reducer에 ADD_POST_SUCCESS 
    가실행되고  dummyData에 action.data가 들어간다.
    addPostDone = true 가 되면서 input창의 content 가 초기화된다. 

    

Post 작성완료시 User.Posts에 Post.id를 어떻게 넣어줄 수 있는가?
1. 사용자가 게시글을 작성한다. 그러면 Post Reducer에서 ADD_POST_SUCCESS 를 실행하게 된다. 게시글이 작성되면  User Reducer에서있는

    const dummyUser = (data) => ({
    ...
    Posts: [{ id: 1 }], <---------------------------- 이부분에 포스트가 추가되어야한다.
    ...
    });

    User 파트는 User Reducer에서 작동해야하는데 이걸 어떻게 처리할 것인가?? 게시글은 PostReducer 나에대한 정보는 UserReducer 이걸
    어떻게 할 것인가??
    Post를 1개 삭제하면 dummyUser.Posts 에서도 id가 1개 빠져야한다. 

    1)  User상태를 바꾸기 위해서는 Action을 만든다.
        export const ADD_POST_TO_ME = 'ADD_POST_TO_ME';
        export const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';
    2)  PostSaga에서 UserAction을 실행할 수 있다.   


    